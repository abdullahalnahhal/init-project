{"version":3,"sources":["webpack://metronic/../demo1/src/js/pages/features/cards/tools.js"],"names":[],"mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA,iEAAiE;AACjE,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA,iEAAiE;AACjE,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA,iEAAiE;AACjE,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA,iEAAiE;AACjE,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC","file":"js/pages/features/cards/tools.js","sourcesContent":["\"use strict\";\r\n\r\nvar KTCardTools = function () {\r\n    // Toastr\r\n    var initToastr = function() {\r\n        toastr.options.showDuration = 1000;\r\n    }\r\n\r\n    // Demo 1\r\n    var demo1 = function() {\r\n        // This card is lazy initialized using data-card=\"true\" attribute. You can access to the card object as shown below and override its behavior\r\n        var card = new KTCard('kt_card_1');\r\n\r\n        // Toggle event handlers\r\n        card.on('beforeCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        card.on('beforeExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Remove event handlers\r\n        card.on('beforeRemove', function(card) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this card ?');  // remove card after user confirmation\r\n        });\r\n\r\n        card.on('afterRemove', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Reload event handlers\r\n        card.on('reload', function(card) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            KTApp.block(card.getSelf(), {\r\n                overlayColor: '#ffffff',\r\n                type: 'loader',\r\n                state: 'primary',\r\n                opacity: 0.3,\r\n                size: 'lg'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                KTApp.unblock(card.getSelf());\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    // Demo 2\r\n    var demo2 = function() {\r\n        // This card is lazy initialized using data-card=\"true\" attribute. You can access to the card object as shown below and override its behavior\r\n        var card = new KTCard('kt_card_2');\r\n\r\n        // Toggle event handlers\r\n        card.on('beforeCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        card.on('beforeExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Remove event handlers\r\n        card.on('beforeRemove', function(card) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this card ?');  // remove card after user confirmation\r\n        });\r\n\r\n        card.on('afterRemove', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Reload event handlers\r\n        card.on('reload', function(card) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            KTApp.block(card.getSelf(), {\r\n                overlayColor: '#000000',\r\n                type: 'spinner',\r\n                state: 'primary',\r\n                opacity: 0.05,\r\n                size: 'lg'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                KTApp.unblock(card.getSelf());\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    // Demo 3\r\n    var demo3 = function() {\r\n        // This card is lazy initialized using data-card=\"true\" attribute. You can access to the card object as shown below and override its behavior\r\n        var card = new KTCard('kt_card_3');\r\n\r\n        // Toggle event handlers\r\n        card.on('beforeCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        card.on('beforeExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Remove event handlers\r\n        card.on('beforeRemove', function(card) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this card ?');  // remove card after user confirmation\r\n        });\r\n\r\n        card.on('afterRemove', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Reload event handlers\r\n        card.on('reload', function(card) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            KTApp.block(card.getSelf(), {\r\n                type: 'loader',\r\n                state: 'success',\r\n                message: 'Please wait...'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                KTApp.unblock(card.getSelf());\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    // Demo 4\r\n    var demo4 = function() {\r\n        // This card is lazy initialized using data-card=\"true\" attribute. You can access to the card object as shown below and override its behavior\r\n        var card = new KTCard('kt_card_4');\r\n\r\n        // Toggle event handlers\r\n        card.on('beforeCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        card.on('beforeExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Remove event handlers\r\n        card.on('beforeRemove', function(card) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this card ?');  // remove card after user confirmation\r\n        });\r\n\r\n        card.on('afterRemove', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Reload event handlers\r\n        card.on('reload', function(card) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            KTApp.block(card.getSelf(), {\r\n                type: 'loader',\r\n                state: 'primary',\r\n                message: 'Please wait...'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                KTApp.unblock(card.getSelf());\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    return {\r\n        //main function to initiate the module\r\n        init: function () {\r\n            initToastr();\r\n\r\n            // init demos\r\n            demo1();\r\n            demo2();\r\n            demo3();\r\n            demo4();\r\n        }\r\n    };\r\n}();\r\n\r\njQuery(document).ready(function() {\r\n    KTCardTools.init();\r\n});\r\n"],"sourceRoot":""}