{"version":3,"sources":["webpack://metronic/../demo1/src/js/pages/custom/login/login-general.js"],"names":[],"mappings":";;;;;;AAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,MAAM;AACN;AACA,OAAO;AACP,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,MAAM;AACN;AACA,OAAO;AACP,SAAS;;AAET;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,MAAM;AACN;AACA,OAAO;AACP,SAAS;;AAET;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC","file":"js/pages/custom/login/login-general.js","sourcesContent":["\"use strict\";\r\n\r\n// Class Definition\r\nvar KTLogin = function() {\r\n    var _login;\r\n\r\n    var _showForm = function(form) {\r\n        var cls = 'login-' + form + '-on';\r\n        var form = 'kt_login_' + form + '_form';\r\n\r\n        _login.removeClass('login-forgot-on');\r\n        _login.removeClass('login-signin-on');\r\n        _login.removeClass('login-signup-on');\r\n\r\n        _login.addClass(cls);\r\n\r\n        KTUtil.animateClass(KTUtil.getById(form), 'animate__animated animate__backInUp');\r\n    }\r\n\r\n    var _handleSignInForm = function() {\r\n        var validation;\r\n\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n        validation = FormValidation.formValidation(\r\n\t\t\tKTUtil.getById('kt_login_signin_form'),\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\tusername: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Username is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpassword: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Password is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n                    trigger: new FormValidation.plugins.Trigger(),\r\n                    submitButton: new FormValidation.plugins.SubmitButton(),\r\n                    //defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n        $('#kt_login_signin_submit').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            validation.validate().then(function(status) {\r\n\t\t        if (status == 'Valid') {\r\n                    swal.fire({\r\n\t\t                text: \"All is cool! Now you submit this form\",\r\n\t\t                icon: \"success\",\r\n\t\t                buttonsStyling: false,\r\n\t\t                confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n    \t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t\t\t\t\t}\r\n\t\t            }).then(function() {\r\n\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal.fire({\r\n\t\t                text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t                icon: \"error\",\r\n\t\t                buttonsStyling: false,\r\n\t\t                confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n    \t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t\t\t\t\t}\r\n\t\t            }).then(function() {\r\n\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t    });\r\n        });\r\n\r\n        // Handle forgot button\r\n        $('#kt_login_forgot').on('click', function (e) {\r\n            e.preventDefault();\r\n            _showForm('forgot');\r\n        });\r\n\r\n        // Handle signup\r\n        $('#kt_login_signup').on('click', function (e) {\r\n            e.preventDefault();\r\n            _showForm('signup');\r\n        });\r\n    }\r\n\r\n    var _handleSignUpForm = function(e) {\r\n        var validation;\r\n        var form = KTUtil.getById('kt_login_signup_form');\r\n\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n        validation = FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\tfullname: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Username is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\temail: {\r\n                        validators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Email address is required'\r\n\t\t\t\t\t\t\t},\r\n                            emailAddress: {\r\n\t\t\t\t\t\t\t\tmessage: 'The value is not a valid email address'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n                    password: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'The password is required'\r\n                            }\r\n                        }\r\n                    },\r\n                    cpassword: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'The password confirmation is required'\r\n                            },\r\n                            identical: {\r\n                                compare: function() {\r\n                                    return form.querySelector('[name=\"password\"]').value;\r\n                                },\r\n                                message: 'The password and its confirm are not the same'\r\n                            }\r\n                        }\r\n                    },\r\n                    agree: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'You must accept the terms and conditions'\r\n                            }\r\n                        }\r\n                    },\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n        $('#kt_login_signup_submit').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            validation.validate().then(function(status) {\r\n\t\t        if (status == 'Valid') {\r\n                    swal.fire({\r\n\t\t                text: \"All is cool! Now you submit this form\",\r\n\t\t                icon: \"success\",\r\n\t\t                buttonsStyling: false,\r\n\t\t                confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n    \t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t\t\t\t\t}\r\n\t\t            }).then(function() {\r\n\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal.fire({\r\n\t\t                text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t                icon: \"error\",\r\n\t\t                buttonsStyling: false,\r\n\t\t                confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n    \t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t\t\t\t\t}\r\n\t\t            }).then(function() {\r\n\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t    });\r\n        });\r\n\r\n        // Handle cancel button\r\n        $('#kt_login_signup_cancel').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            _showForm('signin');\r\n        });\r\n    }\r\n\r\n    var _handleForgotForm = function(e) {\r\n        var validation;\r\n\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n        validation = FormValidation.formValidation(\r\n\t\t\tKTUtil.getById('kt_login_forgot_form'),\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\temail: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Email address is required'\r\n\t\t\t\t\t\t\t},\r\n                            emailAddress: {\r\n\t\t\t\t\t\t\t\tmessage: 'The value is not a valid email address'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n        // Handle submit button\r\n        $('#kt_login_forgot_submit').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            validation.validate().then(function(status) {\r\n\t\t        if (status == 'Valid') {\r\n                    // Submit form\r\n                    KTUtil.scrollTop();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal.fire({\r\n\t\t                text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t                icon: \"error\",\r\n\t\t                buttonsStyling: false,\r\n\t\t                confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n    \t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t\t\t\t\t}\r\n\t\t            }).then(function() {\r\n\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t    });\r\n        });\r\n\r\n        // Handle cancel button\r\n        $('#kt_login_forgot_cancel').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            _showForm('signin');\r\n        });\r\n    }\r\n\r\n    // Public Functions\r\n    return {\r\n        // public functions\r\n        init: function() {\r\n            _login = $('#kt_login');\r\n\r\n            _handleSignInForm();\r\n            _handleSignUpForm();\r\n            _handleForgotForm();\r\n        }\r\n    };\r\n}();\r\n\r\n// Class Initialization\r\njQuery(document).ready(function() {\r\n    KTLogin.init();\r\n});\r\n"],"sourceRoot":""}